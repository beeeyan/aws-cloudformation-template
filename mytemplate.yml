AWSTemplateFormatVersion: "2010-09-09"
Description: Memorandum of setting up AWS environment

Resources:
# ------------------------------------------------------------#
#  VPC
# ------------------------------------------------------------#
    MyVPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.0.0.0/16
            Tags:
            - Key: Name
              Value: MyVPC

    # InternetGateway Create
    InternetGateway:
        Type: "AWS::EC2::InternetGateway"
        Properties:
            Tags:
            - Key: Name
              Value: "test-igw"

    # IGW Attach
    InternetGatewayAttachment:
        Type: "AWS::EC2::VPCGatewayAttachment"
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref MyVPC

# ------------------------------------------------------------#
#  Subnet
# ------------------------------------------------------------#
    # Public Subnet
    # Subnet Public1a
    PublicSubnet1a:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: "ap-northeast-1a"
            CidrBlock: 10.0.110.0/24
            VpcId: !Ref MyVPC
            Tags:
              - Key: Name
                Value: "test-public-subnet-1a"
    # Subnet Public1c
    PublicSubnet1c:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: "ap-northeast-1c"
            CidrBlock: 10.0.120.0/24
            VpcId: !Ref MyVPC
            Tags:
            - Key: Name
              Value: "test-public-subnet-1c"
    # Subnet Public1d
    PublicSubnet1d:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: "ap-northeast-1d"
            CidrBlock: 10.0.130.0/24
            VpcId: !Ref MyVPC
            Tags:
            - Key: Name
              Value: "test-public-subnet-1d"

    # Private Subnet
    # Subnet Private1a
    PrivateSubnet1a:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: "ap-northeast-1a"
            CidrBlock: 10.0.10.0/24
            VpcId: !Ref MyVPC
            Tags:
            - Key: Name
              Value: "test-private-subnet-1a"
    # Subnet Private1c
    PrivateSubnet1c:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: "ap-northeast-1c"
            CidrBlock: 10.0.20.0/24
            VpcId: !Ref MyVPC
            Tags:
            - Key: Name
              Value: "test-private-subnet-1c"
    # Subnet Private1d
    PrivateSubnet1d:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: "ap-northeast-1d"
            CidrBlock: 10.0.30.0/24
            VpcId: !Ref MyVPC
            Tags:
            - Key: Name
              Value: "test-private-subnet-1d"

# ------------------------------------------------------------#
#  RouteTable
# ------------------------------------------------------------#
    # Public RouteTable1a
    PublicRouteTable1a:
        Type: "AWS::EC2::RouteTable"
        Properties:
          VpcId: !Ref MyVPC
          Tags:
            - Key: Name
              Value: "test-public-route-1a"
    
    # Public RouteTable1c
    PublicRouteTable1c:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId: !Ref MyVPC
        Tags:
          - Key: Name
            Value: "test-public-route-1c"

    # Public RouteTable1c
    PublicRouteTable1d:
        Type: "AWS::EC2::RouteTable"
        Properties:
          VpcId: !Ref MyVPC
          Tags:
            - Key: Name
              Value: "test-public-route-1d"
            
    # Private RouteTable1a
    PrivateRouteTable1a:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId: !Ref MyVPC
        Tags:
          - Key: Name
            Value: "test-private-route-1a"
    
    # Private RouteTable1c
    PrivateRouteTable1c:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId: !Ref MyVPC
        Tags:
          - Key: Name
            Value: "test-private-route-1c"

    # Private RouteTable1d
    PrivateRouteTable1d:
        Type: "AWS::EC2::RouteTable"
        Properties:
          VpcId: !Ref MyVPC
          Tags:
            - Key: Name
              Value: "test-private-route-1d"

# ------------------------------------------------------------#
# Routing
# ------------------------------------------------------------# 
    # PublicRoute1a
    PublicRoute1a:
        Type: "AWS::EC2::Route"
        Properties:
          RouteTableId: !Ref PublicRouteTable1a
          DestinationCidrBlock: "0.0.0.0/0"
          GatewayId: !Ref InternetGateway
    
    # PublicRoute1c
    PublicRoute1c:
      Type: "AWS::EC2::Route"
      Properties:
        RouteTableId: !Ref PublicRouteTable1c
        DestinationCidrBlock: "0.0.0.0/0"
        GatewayId: !Ref InternetGateway

    # PublicRoute1d
    PublicRoute1d:
        Type: "AWS::EC2::Route"
        Properties:
          RouteTableId: !Ref PublicRouteTable1d
          DestinationCidrBlock: "0.0.0.0/0"
          GatewayId: !Ref InternetGateway

# ------------------------------------------------------------#
# RouteTable Associate
# ------------------------------------------------------------# 
    # PublicRouteTable Associate Subnet1a
    PublicSubnet1aRouteTableAssociation:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
          SubnetId: !Ref PublicSubnet1a
          RouteTableId: !Ref PublicRouteTable1a
    
    # PublicRouteTable Associate Subnet1c
    PublicSubnet1cRouteTableAssociation:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId: !Ref PublicSubnet1c
        RouteTableId: !Ref PublicRouteTable1c

    # PublicRouteTable Associate Subnet1d
    PublicSubnet1dRouteTableAssociation:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId: !Ref PublicSubnet1d
        RouteTableId: !Ref PublicRouteTable1d

    # PrivateRouteTable Associate Subnet1a
    PrivateSubnet1aRouteTableAssociation:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId: !Ref PrivateSubnet1a
        RouteTableId: !Ref PrivateRouteTable1a
    
    # PrivateRouteTable Associate Subnet1c
    PrivateSubnet1cRouteTableAssociation:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId: !Ref PrivateSubnet1c
        RouteTableId: !Ref PrivateRouteTable1c

    # PrivateRouteTable Associate Subnet1d
    PrivateSubnet1dRouteTableAssociation:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
          SubnetId: !Ref PrivateSubnet1d
          RouteTableId: !Ref PrivateRouteTable1d